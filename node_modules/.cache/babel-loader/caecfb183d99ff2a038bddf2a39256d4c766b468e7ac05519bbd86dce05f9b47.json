{"ast":null,"code":"const API_URL = \"http://localhost:8080\";\n\n// Общая функция для обработки запросов\nconst fetchData = async (url, options = {}) => {\n  try {\n    const response = await fetch(`${API_URL}${url}`, options);\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || \"Ошибка запроса\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Примеры функций API\nexport const getDishesWithIngredients = () => fetchData(\"/api/dishes/get\", {\n  method: \"GET\"\n});\nexport const getUnorderedDishes = () => fetchData(\"/api/dishes/get/unordered\", {\n  method: \"GET\"\n});\nexport const getDishesByIngredients = ingredient => fetchData(`/api/dishes/get/by-ingredients?ingredient=${ingredient}`, {\n  method: \"GET\"\n});\nexport const getEmployeeOrderCount = (dateFrom, dateTo) => fetchData(`/api/employees/orders-count?date_from=${dateFrom}&date_to=${dateTo}`, {\n  method: \"GET\"\n});\nexport const getExpiringProducts = () => fetchData(\"/api/products/expiring-soon\", {\n  method: \"GET\"\n});\nexport const downloadReport = (dateFrom, dateTo) => fetchData(`/api/report/download?date_from=${dateFrom}&date_to=${dateTo}`, {\n  method: \"GET\"\n});\nexport const getCustomerOrderHistory = (customerId, dateFrom, dateTo) => fetchData(`/api/customers/${customerId}/orders?date_from=${dateFrom}&date_to=${dateTo}`, {\n  method: \"GET\"\n});\nexport const getMostPopularDishes = () => fetchData(\"/api/dishes/popular\", {\n  method: \"GET\"\n});\nexport const getSuppliersByProduct = productName => fetchData(`/api/products/${productName}/suppliers`, {\n  method: \"GET\"\n});\nexport const getReportDownload = (dateFrom, dateTo) => fetchData(`/api/report/download?date_from=${dateFrom}&date_to=${dateTo}`, {\n  method: \"GET\"\n});","map":{"version":3,"names":["API_URL","fetchData","url","options","response","fetch","ok","error","json","Error","message","console","getDishesWithIngredients","method","getUnorderedDishes","getDishesByIngredients","ingredient","getEmployeeOrderCount","dateFrom","dateTo","getExpiringProducts","downloadReport","getCustomerOrderHistory","customerId","getMostPopularDishes","getSuppliersByProduct","productName","getReportDownload"],"sources":["/Users/maxim/Documents/go-projects/full-restaurant/restaurant-ui/src/api.js"],"sourcesContent":["const API_URL = \"http://localhost:8080\";\n\n// Общая функция для обработки запросов\nconst fetchData = async (url, options = {}) => {\n    try {\n        const response = await fetch(`${API_URL}${url}`, options);\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.message || \"Ошибка запроса\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n};\n\n// Примеры функций API\nexport const getDishesWithIngredients = () =>\n    fetchData(\"/api/dishes/get\", {method: \"GET\"});\n\nexport const getUnorderedDishes = () =>\n    fetchData(\"/api/dishes/get/unordered\", {method: \"GET\"});\n\nexport const getDishesByIngredients = (ingredient) =>\n    fetchData(`/api/dishes/get/by-ingredients?ingredient=${ingredient}`,{method: \"GET\"});\n\nexport const getEmployeeOrderCount = (dateFrom, dateTo) =>\n    fetchData(`/api/employees/orders-count?date_from=${dateFrom}&date_to=${dateTo}`, {method: \"GET\"});\n\nexport const getExpiringProducts = () =>\n    fetchData(\"/api/products/expiring-soon\", {method: \"GET\"});\n\nexport const downloadReport = (dateFrom, dateTo) =>\n    fetchData(`/api/report/download?date_from=${dateFrom}&date_to=${dateTo}`, { method: \"GET\" });\n\nexport const getCustomerOrderHistory = (customerId, dateFrom, dateTo) =>\n    fetchData(`/api/customers/${customerId}/orders?date_from=${dateFrom}&date_to=${dateTo}`,{method: \"GET\"});\n\nexport const getMostPopularDishes = () =>\n    fetchData(\"/api/dishes/popular\",{method: \"GET\"});\n\nexport const getSuppliersByProduct = (productName) =>\n    fetchData(`/api/products/${productName}/suppliers`, {method: \"GET\"});\n\nexport const getReportDownload = (dateFrom, dateTo) =>\n        fetchData(`/api/report/download?date_from=${dateFrom}&date_to=${dateTo}`, {method: \"GET\"});\n\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;;AAEvC;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,GAAGE,GAAG,EAAE,EAAEC,OAAO,CAAC;IACzD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,gBAAgB,CAAC;IACtD;IACA,OAAO,MAAMN,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZI,OAAO,CAACJ,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,wBAAwB,GAAGA,CAAA,KACpCX,SAAS,CAAC,iBAAiB,EAAE;EAACY,MAAM,EAAE;AAAK,CAAC,CAAC;AAEjD,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAC9Bb,SAAS,CAAC,2BAA2B,EAAE;EAACY,MAAM,EAAE;AAAK,CAAC,CAAC;AAE3D,OAAO,MAAME,sBAAsB,GAAIC,UAAU,IAC7Cf,SAAS,CAAC,6CAA6Ce,UAAU,EAAE,EAAC;EAACH,MAAM,EAAE;AAAK,CAAC,CAAC;AAExF,OAAO,MAAMI,qBAAqB,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAClDlB,SAAS,CAAC,yCAAyCiB,QAAQ,YAAYC,MAAM,EAAE,EAAE;EAACN,MAAM,EAAE;AAAK,CAAC,CAAC;AAErG,OAAO,MAAMO,mBAAmB,GAAGA,CAAA,KAC/BnB,SAAS,CAAC,6BAA6B,EAAE;EAACY,MAAM,EAAE;AAAK,CAAC,CAAC;AAE7D,OAAO,MAAMQ,cAAc,GAAGA,CAACH,QAAQ,EAAEC,MAAM,KAC3ClB,SAAS,CAAC,kCAAkCiB,QAAQ,YAAYC,MAAM,EAAE,EAAE;EAAEN,MAAM,EAAE;AAAM,CAAC,CAAC;AAEhG,OAAO,MAAMS,uBAAuB,GAAGA,CAACC,UAAU,EAAEL,QAAQ,EAAEC,MAAM,KAChElB,SAAS,CAAC,kBAAkBsB,UAAU,qBAAqBL,QAAQ,YAAYC,MAAM,EAAE,EAAC;EAACN,MAAM,EAAE;AAAK,CAAC,CAAC;AAE5G,OAAO,MAAMW,oBAAoB,GAAGA,CAAA,KAChCvB,SAAS,CAAC,qBAAqB,EAAC;EAACY,MAAM,EAAE;AAAK,CAAC,CAAC;AAEpD,OAAO,MAAMY,qBAAqB,GAAIC,WAAW,IAC7CzB,SAAS,CAAC,iBAAiByB,WAAW,YAAY,EAAE;EAACb,MAAM,EAAE;AAAK,CAAC,CAAC;AAExE,OAAO,MAAMc,iBAAiB,GAAGA,CAACT,QAAQ,EAAEC,MAAM,KAC1ClB,SAAS,CAAC,kCAAkCiB,QAAQ,YAAYC,MAAM,EAAE,EAAE;EAACN,MAAM,EAAE;AAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}